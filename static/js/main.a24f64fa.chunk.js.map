{"version":3,"sources":["Components/Cards.jsx","App.jsx","index.js"],"names":["Cards","props","style","width","className","City","country","Math","round","Temp","src","icon","alt","description","toUpperCase","API_KEY","App","useState","cities","setCities","tempCity","setTempCity","cityData","setCityData","error","setError","updateCities","submitted","event","prevData","target","value","useEffect","city","length","axios","get","catch","response","console","log","status","then","res","data","background","paddingTop","type","onChange","placeholder","onClick","map","item","key","id","name","main","temp","sys","weather","class","ReactDOM","render","document","getElementById"],"mappings":"8NA4BeA,G,KAzBD,SAACC,GACd,OACC,yBAAKC,MAAO,CAACC,MAAM,SAClB,yBAAKC,UAAU,QACd,yBAAKA,UAAU,aACd,4BACCH,EAAMI,KACP,yBAAKD,UAAU,WACdH,EAAMK,UAIR,yBAAKF,UAAU,aACbG,KAAKC,MAAMP,EAAMQ,MAClB,uCAED,gCACD,yBAAKC,IAAKT,EAAMU,KAAMC,IAAK,gDACzB,oCAAaX,EAAMY,YAAYC,qB,gBCjB9BC,EAAU,mCA6EDC,EA1EH,WAAO,IAAD,EACcC,mBAAS,CAAC,cADxB,mBACPC,EADO,KACCC,EADD,OAEkBF,mBAAS,IAF3B,mBAEPG,EAFO,KAEGC,EAFH,OAGkBJ,mBAAS,IAH3B,mBAGPK,EAHO,KAGGC,EAHH,OAIYN,oBAAS,GAJrB,mBAIPO,EAJO,KAIAC,EAJA,KAKRC,EAAe,SAACC,EAAWC,GAC1BD,EACCR,GAAU,SAAAU,GAAQ,4BAAQA,GAAR,CAAkBT,OAEnCC,EAAYO,EAAME,OAAOC,QAElCC,qBAAU,WAEN,IAAIC,EAAOf,EAAOA,EAAOgB,OAAS,GAIlCC,IAAMC,IAAI,qDAAqDH,EAAK,UAAUlB,EAAQ,iBACjFsB,OAAM,SAAUb,GACTA,EAAMc,WAIVC,QAAQC,IAAIhB,EAAMc,SAASG,QAC3BhB,GAAS,OAMjBU,IAAMC,IAAI,qDAAqDH,EAAK,UAAUlB,EAAQ,iBACjF2B,MAAK,SAACC,GACH,IAAIC,EAAOD,EAAIC,KACfnB,GAAS,GAETF,GAAa,SAAAM,GAAQ,4BAAQA,GAAR,CAAkBe,YAGhD,CAAC1B,IASJ,OACI,yBAAKd,UAAU,4BAA4BF,MAAO,CAAC2C,WAAW,UAAWC,WAAY,SAErF,kDACA,wBAAI1C,UAAU,iBAAiBoB,EAT3B,sDASoD,gCACxD,yBAAKpB,UAAU,WACf,2BAAO2C,KAAK,OAAOC,SAAU,SAACpB,GAAD,OAAWF,GAAa,EAAOE,IAAQqB,YAAY,sBAChF,4BAAQF,KAAO,SAAS3C,UAAU,qCAAqC8C,QAAS,kBAAMxB,GAAa,EAAM,MAAzG,WAEI,yBAAKtB,UAAU,qBACdkB,EAAS6B,KAAK,SAACC,GAAD,OACX,yBAAKhD,UAAU,gBACX,kBAAC,EAAD,CACIiD,IAAKD,EAAKE,GACVjD,KAAQ+C,EAAKG,KACb9C,KAAQ2C,EAAKI,KAAKC,KAClBnD,QAAW8C,EAAKM,IAAIpD,QACpBO,YAAeuC,EAAKO,QAAQ,GAAG9C,YAC/BF,KAAM,qCAAuCyC,EAAKO,QAAQ,GAAGhD,KAAO,iBAKhF,gCAAQ,wBAAIP,UAAU,UAAS,uBAAGwD,MAAM,iBAAhC,sBCxEpBC,IAASC,OAAO,kBAAC,EAAD,MACdC,SAASC,eAAe,U","file":"static/js/main.a24f64fa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport '../App.css'\r\nconst Cards = (props) =>{\r\n\treturn(\r\n\t\t<div style={{width:\"auto\"}}>\r\n\t\t\t<div className=\"card\">\r\n\t\t\t\t<div className=\"container\">\t\t\t\t\t\t\r\n\t\t\t\t\t<h2> \r\n\t\t\t\t\t{props.City}\r\n\t\t\t\t\t<sup className=\"country\">\r\n\t\t\t\t\t{props.country}\r\n\t\t\t\t\t\r\n\t\t\t\t\t</sup>\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t<div className=\"city-temp\">\r\n\t\t\t\t\t{Math.round(props.Temp)}\r\n\t\t\t\t\t<sup>Â°C</sup>\r\n\t\t\t\t</div>\r\n\t\t\t\t<figure>\r\n\t\t\t<img src={props.icon} alt={\"http://openweathermap.org/img/wn/50n@2x.png\"}/>\r\n\t\t\t\t\t<figcaption>{props.description.toUpperCase()}</figcaption>\r\n\t\t\t\t</figure>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n} \r\nexport default Cards;","import React, { useState, useEffect } from 'react';\r\nimport Cards from './Components/Cards'\r\nimport axios from 'axios';\r\nimport './App.css';\r\nconst API_KEY = \"78872b499149036415d75305243de5d8\";\r\n\r\n\r\nconst App = () => {\r\n    const [cities, setCities] = useState([\"Hyderabad\"]);\r\n    const [tempCity, setTempCity] = useState(\"\");\r\n    const [cityData, setCityData] = useState([]);\r\n    const [error, setError] = useState(false);\r\n    const updateCities = (submitted, event) => { // data will be obtained from input\r\n        if(submitted){\r\n            setCities(prevData => [...prevData, tempCity]);\r\n        }\r\n        else setTempCity(event.target.value);\r\n    }\r\n    useEffect(() => {\r\n        // ComponentDidUpdate\r\n        let city = cities[cities.length - 1]; // City is last element\r\n        // let city = cities;\r\n\r\n\r\n        axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=\"+city+\"&appid=\"+API_KEY+\"&units=metric\")\r\n            .catch(function (error) {\r\n                if (error.response) {\r\n                // The request was made and the server responded with a status code\r\n                // that falls out of the range of 2xx\r\n                // console.log(error.response.data);\r\n                console.log(error.response.status);\r\n                setError(true);\r\n                // console.log(error.response.headers);\r\n                }\r\n             });\r\n\r\n\r\n        axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=\"+city+\"&appid=\"+API_KEY+\"&units=metric\")\r\n            .then((res) => {\r\n                let data = res.data;\r\n                setError(false);\r\n                // console.log(res);\r\n                setCityData( prevData => [...prevData, data]);\r\n                // console.log(res.data);\r\n        })\r\n    }, [cities])\r\n\r\n    const showErrorMessage = () => {\r\n        return(\r\n            <div>\r\n                Not a valid city name\r\n            </div>\r\n        );\r\n    }\r\n    return(\r\n        <div className=\"firstPage container-fluid\" style={{background:\"#0a1f44\", paddingTop: \"50px\"}} >\r\n      \r\n        <h1 >Simple Weather App</h1>\r\n        <h4 className=\"error-message\">{error?showErrorMessage():<span></span>}</h4>\r\n        <div className=\"my-form\">\r\n        <input type=\"text\" onChange={(event) => updateCities(false, event)} placeholder=\"Search for a City\"/>\r\n        <button type = \"submit\" className=\"btn btn-danger submitButton btn-lg\" onClick={() => updateCities(true, \"\")}>Submit</button>\r\n        </div>\r\n            <div className=\"weather-container\">\r\n            {cityData.map( (item) => \r\n                <div className=\"weather-item\">\r\n                    <Cards\r\n                        key={item.id}\r\n                        City = {item.name}\r\n                        Temp = {item.main.temp}\r\n                        country = {item.sys.country}\r\n                        description = {item.weather[0].description}\r\n                        icon={\"https://openweathermap.org/img/wn/\" + item.weather[0].icon + \"@2x.png\"}\r\n                    />\r\n                </div>\r\n            )}\r\n            </div>\r\n            <footer><h5 className=\"Footer\"><i class=\"fab fa-react\"></i>  App By Ashish</h5></footer>\r\n      </div>\r\n    );\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\n\r\nReactDOM.render(<App/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n"],"sourceRoot":""}